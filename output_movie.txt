Running basic DDP example on rank 0.
0 映射前的 df_kg:
      head  relation  tail
0     2086        44  3846
1     3355         9  3848
2     3798        44  3849
3     3177        46  3851
4     1733        44  3849
...    ...       ...   ...
6736  1628        44  5258
6737  2344         9  8132
6738  2337        30  6434
6739  2080         9  8058
6740  2080        30  9361

[6741 rows x 3 columns]
0 映射前的dataset：
       userID  itemID  label
0        1648    7348      0
1         596    6040      0
2         475      57      1
3         866     331      1
4        1409    3027      1
...       ...     ...    ...
21114     674    1268      1
21115     949      77      1
21116    1778    1298      0
21117    1115      36      1
21118     793    1396      0

[21119 rows x 3 columns]
0 映射后的 df_kg:
      head  relation  tail
0        0        44  2110
1        1         9  2111
2        2        44  2112
3        3        46  2113
4        4        44  2112
...    ...       ...   ...
6736  2109        44  2723
6737  1278         9  4022
6738   232        30  3236
6739   345         9  3990
6740   345        30  4579

[6741 rows x 3 columns]
0 映射后的dataset：
       userID  itemID  label
0        1648  3658.0      0
1         596  3069.0      0
2         475   442.0      1
3         866     NaN      1
4        1409  1123.0      1
...       ...     ...    ...
21114     674     NaN      1
21115     949   378.0      1
21116    1778  1856.0      0
21117    1115    92.0      1
21118     793     NaN      0

[21119 rows x 3 columns]
Construct knowledge graph ... Done
Running basic DDP example on rank 1.
Construct knowledge graph ... Done
Traceback (most recent call last):
  File "examples/profile/gcn_yxb/pa_gcn_yxb3.py", line 317, in <module>
    mp.spawn(demo_basic,
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 246, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method="spawn")
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 202, in start_processes
    while not context.join():
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 163, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 1 terminated with the following error:
Traceback (most recent call last):
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 74, in _wrap
    fn(i, *args)
  File "/home/xiaojue/Pagraph/PaGraph-kgcn/examples/profile/gcn_yxb/pa_gcn_yxb3.py", line 188, in demo_basic
    outputs = net(user_ids, item_ids)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 1519, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 1355, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xiaojue/Pagraph/PaGraph-kgcn/examples/profile/gcn_yxb/model_yxb.py", line 69, in forward
    user_embeddings = self.usr(u).squeeze(dim = 1)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/modules/sparse.py", line 162, in forward
    return F.embedding(
  File "/data/xj/anaconda3/envs/pagraph/lib/python3.8/site-packages/torch/nn/functional.py", line 2233, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.cuda.DoubleTensor instead (while checking arguments for embedding)

